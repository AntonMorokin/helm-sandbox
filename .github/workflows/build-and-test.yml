name: build-and-test
on:
  workflow_call:
    inputs:
      version:
        description: "Version of a release"
        type: string
        required: false
        default: "1.0.0"
  pull_request:
    types: [opened, synchronize, reopened]
defaults:
  run:
    shell: pwsh
env:
  CMS_BUILD_VERSION: "1.0.0"
jobs:
  setup-build-version:
    name: Setup build version
    runs-on: [self-hosted, Windows]
    steps:
    - name: Setup build version from inputs
      run: $env:CMS_BUILD_VERSION = ${{ inputs.version }}
    - name: Setup default build version if needed
      run: if (($null -eq $env:CMS_BUILD_VERSION) -or ($env:CMS_BUILD_VERSION -eq "")) { $env:CMS_BUILD_VERSION = "1.0.0" }
  build-services:
    name: Build services
    runs-on: [self-hosted, Windows]
    needs: setup-build-version
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      if: ${{ (inputs.version == null) || (inputs.version == '') }}
    - name: Clean up build dir
      run: if (Test-Path published/backend) { Remove-Item published/backend -Recurse }
    - name: Building Crs.Backend service
      run: |
        dotnet restore src
        dotnet build src/Crs.Backend -c Release --no-restore --no-self-contained /p:Version=$env:CMS_BUILD_VERSION
    - name: Publishing Crs.Backend service
      run: dotnet publish src/Crs.Backend -c Release -o published/backend --no-self-contained --no-build
  run-tests:
    name: Run tests
    runs-on: [self-hosted, Windows]
    needs: build-services
    steps:
    - name: Cleaning up tests dir
      run: |
        if (Test-Path published/tests) { Remove-Item published/tests -Recurse }
        if (Test-Path published/test-results) { Remove-Item published/test-results -Recurse }
    - name: Building Crs.Backend.Tests project
      run: |
        dotnet restore src
        dotnet build src/Crs.Backend.Tests -c Release --no-restore --no-self-contained /p:Version=$env:CMS_BUILD_VERSION
    - name: Publishing Crs.Backend.Tests project
      run: dotnet publish src/Crs.Backend.Tests -c Release -o published/tests --no-self-contained --no-build
    - name: Running Crs.Backend.Tests
      run: dotnet test published/tests/Crs.Backend.Tests.dll -- NUnit.TestOutputXml=../test-results
    - name: Save tests results
      uses: actions/upload-artifact@v3
      with:
        name: crsbackend-test-results
        path: published/test-results/Crs.Backend.Tests.xml
